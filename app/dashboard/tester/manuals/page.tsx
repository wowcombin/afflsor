'use client'

import { useState, useEffect } from 'react'
import { useToast } from '@/components/ui/Toast'
import DataTable, { Column, ActionButton } from '@/components/ui/DataTable'
import KPICard from '@/components/ui/KPICard'
import StatusBadge from '@/components/ui/StatusBadge'
import { 
  DocumentTextIcon,
  PlusIcon,
  EyeIcon,
  PencilIcon,
  CheckCircleIcon,
  XCircleIcon,
  ComputerDesktopIcon
} from '@heroicons/react/24/outline'

interface CasinoManual {
  id: string
  title: string
  content: string
  version: number
  is_published: boolean
  created_at: string
  updated_at: string
  casino: {
    id: string
    name: string
    status: string
  }
  created_by_user: {
    first_name: string
    last_name: string
  }
}

export default function TesterManualsPage() {
  const { addToast } = useToast()
  const [manuals, setManuals] = useState<CasinoManual[]>([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    loadManuals()
  }, [])

  async function loadManuals() {
    try {
      const response = await fetch('/api/casino-manuals')
      
      if (!response.ok) {
        const errorData = await response.json()
        throw new Error(errorData.error || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞–Ω—É–∞–ª–æ–≤')
      }

      const { manuals: manualsData } = await response.json()
      setManuals(manualsData || [])

    } catch (error: any) {
      console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞–Ω—É–∞–ª–æ–≤:', error)
      addToast({
        type: 'error',
        title: '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–∞–Ω—É–∞–ª–æ–≤',
        description: error.message
      })
    } finally {
      setLoading(false)
    }
  }

  const columns: Column<CasinoManual>[] = [
    {
      key: 'title',
      label: '–ú–∞–Ω—É–∞–ª',
      sortable: true,
      filterable: true,
      render: (manual) => (
        <div>
          <div className="font-medium text-gray-900">{manual.title}</div>
          <div className="text-sm text-gray-500">
            {manual.casino?.name} ‚Ä¢ –í–µ—Ä—Å–∏—è {manual.version}
          </div>
        </div>
      )
    },
    {
      key: 'is_published',
      label: '–°—Ç–∞—Ç—É—Å',
      sortable: true,
      render: (manual) => (
        <StatusBadge 
          status={manual.is_published ? 'approved' : 'pending'} 
          size="sm" 
        />
      )
    },
    {
      key: 'updated_at',
      label: '–û–±–Ω–æ–≤–ª–µ–Ω',
      sortable: true,
      render: (manual) => (
        <span className="text-sm text-gray-600">
          {new Date(manual.updated_at).toLocaleDateString('ru-RU')}
        </span>
      )
    }
  ]

  const actions: ActionButton<CasinoManual>[] = [
    {
      label: '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å',
      action: (manual) => {
        addToast({ type: 'info', title: '–†–µ–¥–∞–∫—Ç–æ—Ä –º–∞–Ω—É–∞–ª–æ–≤ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ' })
      },
      variant: 'primary'
    },
    {
      label: '–ü—Ä–æ—Å–º–æ—Ç—Ä',
      action: (manual) => {
        addToast({ type: 'info', title: '–ü—Ä–æ—Å–º–æ—Ç—Ä –º–∞–Ω—É–∞–ª–∞ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ' })
      },
      variant: 'secondary'
    }
  ]

  return (
    <div className="space-y-6">
      <div className="flex justify-between items-center">
        <div>
          <h1 className="text-2xl font-bold text-gray-900">–ú–∞–Ω—É–∞–ª—ã –∫–∞–∑–∏–Ω–æ</h1>
          <p className="text-gray-600">–°–æ–∑–¥–∞–Ω–∏–µ –∏ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–π</p>
        </div>
        <button
          onClick={() => addToast({ type: 'info', title: '–°–æ–∑–¥–∞–Ω–∏–µ –º–∞–Ω—É–∞–ª–∞ - –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ' })}
          className="btn-primary"
        >
          <PlusIcon className="h-5 w-5 mr-2" />
          –°–æ–∑–¥–∞—Ç—å –º–∞–Ω—É–∞–ª
        </button>
      </div>

      {/* KPI Cards */}
      <div className="grid grid-cols-1 md:grid-cols-4 gap-4">
        <KPICard
          title="–í—Å–µ–≥–æ –º–∞–Ω—É–∞–ª–æ–≤"
          value={manuals.length}
          icon={<DocumentTextIcon className="h-6 w-6" />}
          color="primary"
        />
        <KPICard
          title="–û–ø—É–±–ª–∏–∫–æ–≤–∞–Ω—ã"
          value={manuals.filter(m => m.is_published).length}
          icon={<CheckCircleIcon className="h-6 w-6" />}
          color="success"
        />
        <KPICard
          title="–ß–µ—Ä–Ω–æ–≤–∏–∫–∏"
          value={manuals.filter(m => !m.is_published).length}
          icon={<PencilIcon className="h-6 w-6" />}
          color="warning"
        />
        <KPICard
          title="–ö–∞–∑–∏–Ω–æ —Å –º–∞–Ω—É–∞–ª–∞–º–∏"
          value={new Set(manuals.map(m => m.casino?.id)).size}
          icon={<ComputerDesktopIcon className="h-6 w-6" />}
          color="primary"
        />
      </div>

      {/* –¢–∞–±–ª–∏—Ü–∞ –º–∞–Ω—É–∞–ª–æ–≤ */}
      <div className="card">
        <div className="card-header">
          <h3 className="text-lg font-semibold text-gray-900">
            –ú–∞–Ω—É–∞–ª—ã ({manuals.length})
          </h3>
        </div>
        
        <DataTable
          data={manuals}
          columns={columns}
          actions={actions}
          loading={loading}
          pagination={{ pageSize: 20 }}
          filtering={true}
          exportable={true}
          emptyMessage="–ú–∞–Ω—É–∞–ª—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        />
      </div>

      {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
      <div className="bg-success-50 border border-success-200 rounded-lg p-6">
        <h3 className="font-medium text-success-900 mb-3">üìù –†–∞–±–æ—Ç–∞ —Å –º–∞–Ω—É–∞–ª–∞–º–∏</h3>
        <div className="text-sm text-success-800 space-y-2">
          <div>‚Ä¢ <strong>–°–æ–∑–¥–∞–≤–∞–π—Ç–µ –º–∞–Ω—É–∞–ª—ã</strong> –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ—Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–≥–æ –∫–∞–∑–∏–Ω–æ</div>
          <div>‚Ä¢ <strong>–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –≤–µ—Ä—Å–∏–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ</strong> –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è –∏–∑–º–µ–Ω–µ–Ω–∏–π</div>
          <div>‚Ä¢ <strong>–ü—É–±–ª–∏–∫—É–π—Ç–µ –º–∞–Ω—É–∞–ª—ã</strong> –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ Junior –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º</div>
          <div>‚Ä¢ <strong>–û–±–Ω–æ–≤–ª—è–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏</strong> –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö –≤ –∫–∞–∑–∏–Ω–æ</div>
        </div>
      </div>
    </div>
  )
}
